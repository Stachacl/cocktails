{"version":3,"sources":["logo.svg","components/Cocktail.js","components/Loading.js","context.js","components/CocktailList.js","components/SearchForm.js","pages/Home.js","pages/About.js","pages/SingleCocktail.js","pages/Error.js","components/Navbar.js","App.js","index.js"],"names":["module","exports","Cocktail","image","name","id","info","glass","className","src","alt","class","to","Loading","AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","useCallback","a","fetch","response","json","data","drinks","newCocktails","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","console","log","useEffect","Provider","value","useGlobalContext","useContext","CocktailList","length","key","SearchForm","searchValue","useRef","current","focus","onSubmit","e","preventDefault","type","ref","onChange","Home","About","url","SingleCocktail","useParams","cocktail","setCocktail","category","strCategory","instructions","strInstructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","ingredients","getCocktail","index","Error","Navbar","isNavExpanded","setIsNavExpended","logo","onClick","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5d4b325.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2bad8a98.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Cocktail = ({ image, name, id, info, glass }) => {\n  return (\n    <article className=\"col-sm-6 col-md-4 col-lg-3  mb-5\">\n      <div className=\"img-container mb-3\">\n        <img src={image} alt={name} class=\"w-100\" />\n      </div>\n      <div className=\"cocktail-footer\">\n        <h4>{name}</h4>\n        <h6>{glass}</h6>\n        <p><em>{info}</em></p>\n        <Link to={`/cocktail/${id}`} className=\"btn btn-secondary\"> See details</Link>\n      </div>\n    </article>\n  );\n};\n\nexport default Cocktail;\n","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <section className=\"container\" class=\"d-flex justify-content-center\">\n      <div className=\"row px-5\">\n          <div class=\"loader-glass\"></div>\n          <div class=\"item\"></div>\n      </div>\n      <h3> Loading...</h3>\n    </section>\n  );\n};\n\nexport default Loading;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\n\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"ma\");\n  const [cocktails, setCocktails] = useState([]);\n\n  const fetchDrinks = useCallback ( async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      const { drinks } = data;\n      if (drinks) {\n        //if drinks are not null\n        const newCocktails = drinks.map((item) => {\n          const { idDrink, strDrink, strDrinkThumb, strAlcoholic, strGlass } =\n            item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass,\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm])\n\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm, fetchDrinks]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        loading,\n        cocktails,\n        setSearchTerm,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport Cocktail from \"./Cocktail\";\nimport Loading from \"./Loading\";\nimport { useGlobalContext } from \"../context\";\n\nconst CocktailList = () => {\n  const { cocktails, loading } = useGlobalContext();\n  //if we cannot fetch cocktails\n  if (loading) {\n    return <Loading />;\n  }\n  if (cocktails.length < 1) {\n    return (\n      <div className=\"container\"> \n      <div className=\"row px-5\">\n      <h3>No cocktails match your search criteria, try something else...</h3>\n      </div>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"container\">\n        <div className=\"row px-5\">\n          {cocktails.map((item) => {\n            return <Cocktail key={item.id} {...item} />;\n          })}\n        </div>\n    </section>\n  );\n};\n\nexport default CocktailList;\n","import React from \"react\";\nimport { useGlobalContext } from \"../context\";\n\nconst SearchForm = () => {\n  const { setSearchTerm } = useGlobalContext();\n  const searchValue = React.useRef(\"\");\n\n  React.useEffect(() =>{\n    searchValue.current.focus()\n  }, [])\n\n\n  const searchCocktail = () => {\n    setSearchTerm(searchValue.current.value);\n  }\n\n  //to prevent reloading if user press enter on the empty form\n  const handleSubmit = (e) => {\n    e.preventDefault()\n  }\n  return (\n    <div class=\"container my-5\">\n      <div class=\"row bg-light px-5 py-3 shadow\">\n        <div class=\"col-4\">\n          <strong>\n            <em>Start typing the cocktail name </em>\n          </strong>\n        </div>\n        <div class=\"col-8\">\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              id=\"name\"\n              class=\"form-control\"\n              ref={searchValue}\n              onChange={searchCocktail}\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport CocktailList from \"../components/CocktailList\";\nimport SearchForm from \"../components/SearchForm\";\n\nconst Home = () => {\n  return (\n    <main>\n      <div className=\"hero\">\n        <div className=\"container\">\n          <div className=\"row px-5 align-items-center\">\n            <div className=\"col-md-6\">\n              <p><small>Featured</small></p>\n              <h4>Black Lady Cocktail</h4>\n              <h6>Coupe glass</h6>\n              <p> This striking cocktail gets its color from crème de noir and a creamy boost from an egg white shaken into the mix. The subtle, sweet perfume of blackberry is a perfect complement to herby gin. Together, they taste like the height of sophistication</p>\n              <p>\n                <em>Alcoholic</em>\n              </p>\n            </div>\n\n            {/* empty container: */}\n            <div className=\"col-1\">\n            </div>\n\n            <div className=\"col-md-5\">\n              <img\n                src=\"https://ik.imagekit.io/stcl/Drinks/black_cocktail_okXSP3nR0?ik-sdk-version=javascript-1.4.3&updatedAt=1662702948939\"\n                alt=\"black colour cocktail\"\n                className=\"w-100\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <SearchForm />\n      <CocktailList />\n    </main>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <section className=\"container\">\n      <div className=\"row px-5\">\n        <h4>About us</h4>\n        <p>\n          Cocktails lorem ipsum text placeholder below: offers a wide range of\n          cocktails to make at home, from martinis and shorts to larger punches\n          and pitchers for everyone to share. With step-by-step instructions and\n          full-colour photography, each recipe is easy to follow and even easier\n          to enjoy! <br /> <br />\n          Cocktails were introduced lorem ipsum text placeholder below - in the\n          drawing rooms of Downton Abbey in the 1920s, when US prohibition\n          inspired the insurgence and popularity of American-style bars and\n          bartenders in Britain. This well-curated selection of recipes is\n          organized by the rooms in the Abbey in which the drinks were served\n          and spans everyday sips to party drinks plus hangover helpers and\n          more. In addition to classic concoctions like a Mint Julep, Prince of\n          Wales Punch, and Ginger Beer, this collection features\n          character-specific variations such as Downton Heir, Turkish Attaché,\n          The Valet, and The Chauffeur. The recipes reflect drinks concocted and\n          served upstairs and down, as well as libations from village fairs,\n          cocktail parties, and restaurant menus typical of the time. Features\n          40+ color photographs, including drink images professionaly\n          photographed.\n        </p>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport Loading from \"../components/Loading\";\nimport { useParams, Link } from \"react-router-dom\";\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=\";\n\nconst SingleCocktail = () => {\n  const { id } = useParams();\n  const [loading, setLoading] = React.useState(false);\n  const [cocktail, setCocktail] = React.useState(null);\n\n  //call back function - every time the id changes we are fetching this specific cocktail\n  React.useEffect(() => {\n    setLoading(true);\n    async function getCocktail() {\n      try {\n        const response = await fetch(`${url}${id}`);\n        const data = await response.json();\n        if (data.drinks) {\n          //destructuring data, choosing what to display from data base:\n          const {\n            strDrink: name,\n            strDrinkThumb: image,\n            strAlcoholic: info,\n            strCategory: category,\n            strGlass: glass,\n            strInstructions: instructions,\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n          } = data.drinks[0];\n          //settingg up ingredients array:\n          const ingredients = [\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n          ];\n          //set new cocktail function\n\n          const newCocktail = {\n            name,\n            image,\n            info,\n            category,\n            glass,\n            instructions,\n            ingredients,\n          };\n\n          setCocktail(newCocktail);\n        } else {\n          setCocktail(null);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    }\n    getCocktail();\n  }, [id]);\n\n  if (loading) {\n    return <Loading />;\n  }\n  //checking if the id is correct and the cocktail is exist in data base. If not, then:\n  if (!cocktail) {\n    return <h2> no cocktails to display, try another one</h2>;\n  }\n  const { name, image, info, category, glass, instructions, ingredients } =\n    cocktail;\n\n  return (\n    <section className=\"container\">\n      <div className=\"row px-5\">\n        <h2>Cocktail {name}</h2>\n          <div className=\"img-container mb-3\">\n            <img src={image} alt={name} class=\"w-50\"  />\n          </div>\n        <p>\n          <strong> Name : </strong>\n          {name}\n        </p>\n        <p>\n          <strong> Glass : </strong>\n          {glass}\n        </p>\n        <p>\n          <strong> Category: </strong>\n          {category}\n        </p>\n        <p>\n          <strong> Alcoholic : </strong>\n          {info}\n        </p>\n        <p>\n          <strong> Ingredients : </strong>\n          {ingredients.map((item,index) => {\n            return item? <p key={index}>{item}</p> : null\n          })}\n        </p>\n        <p>\n          <strong> Instructions : </strong>\n          {instructions}\n        </p>\n        <Link to='/' className=\"btn btn-secondary w-50\"> back home </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default SingleCocktail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {GiShatteredGlass} from 'react-icons/gi';\n\nconst Error = () => {\n  return (\n    <section className=\" row d-flex justify-content-center \">\n     <GiShatteredGlass className=\" h1\"/> \n      <div className=\"container d-flex justify-content-center\">\n        <h4> Oops, it is an error...</h4>\n      </div>\n      <Link to=\"/\" className=\"btn btn-secondary w-50\">\n        Press here to search for another cocktail\n      </Link>\n\n    </section>\n  );\n};\n\nexport default Error;\n","import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../logo.svg\";\n\nconst Navbar = () => {\n\n  const [isNavExpanded, setIsNavExpended] = useState(false);\n\n  return (\n\n    <nav class=\"navbar navbar-expand-lg\">\n      <div class=\"container\">\n        <Link to=\"/\" class=\"navbar-brand\">\n          <img src={logo} alt=\"the cocktail club est 1896\" className=\"logo\" />\n        </Link>\n\n        <button onClick={(e) => {\n          setIsNavExpended (!isNavExpanded);\n        }}\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n\n        <div className={ \n          isNavExpanded? \"navbar-collapse collapse show\" : \"navbar-collapse collapse\"\n        }\n          id=\"navbarSupportedContent\">\n          <div class=\"w-100 d-flex justify-content-end\">\n            <ul class=\"navbar-nav mb-2 mb-lg-0 me-1\">\n              <li class=\"nav-item\">\n                <Link class=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li class=\"nav-item\">\n                <Link to=\"/about\" class=\"nav-link\">\n                  About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n// import pages\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport SingleCocktail from './pages/SingleCocktail'\nimport Error from './pages/Error'\n// import components\nimport Navbar from './components/Navbar'\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home/>\n          </Route>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/cocktail/:id\">\n            <SingleCocktail/>\n          </Route>\n          <Route exact path=\"*\">\n            <Error/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { AppProvider } from './context'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n    <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}